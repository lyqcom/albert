# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
# Path for local
device_target: "GPU"

# ==============================================================================
description: "run_classifier"
task_name: "RTE"
do_train: False
do_eval: True
distribute: False
epoch_num: 633
train_data_shuffle: True
eval_data_shuffle: False
train_batch_size: 4
eval_batch_size: 8
#eval_batch_size: 9 qqp
#eval_batch_size: 311 qqp
#eval_batch_size: 109 SST
#eval_batch_size: 51 MRPC
#eval_batch_size: 29
save_checkpoint_steps: 100
warmup_step: 200
spm_model_file: "/home/huwenyan/waxProject/mindspore/albert/moveckpt/30k-clean.model"
save_finetune_checkpoint_path: "/home/huwenyan/waxProject/mindspore/albert/output/classifier_finetune/ckpt"
load_last_finetune_checkpoint_path: ""
load_pretrain_checkpoint_path: "/home/huwenyan/waxProject/mindspore/albert/moveckpt/albert_base.ckpt"
load_finetune_checkpoint_path: "/home/huwenyan/waxProject/mindspore/albert/output/classifier_finetune/ckpt"
train_data_file_path: "/home/huwenyan/waxProject/mindspore/albert/data/finetune/glue"
eval_data_file_path: "/home/huwenyan/waxProject/mindspore/albert/data/finetune/glue"
train_mindrecord_file: "/home/huwenyan/waxProject/mindspore/albert/data/finetune/mindrecord/classfier"
eval_mindrecord_file: "/home/huwenyan/waxProject/mindspore/albert/data/finetune/mindrecord/classfier"
vocab_file_path: "/home/huwenyan/waxProject/mindspore/albert/moveckpt/30k-clean.vocab"
schema_file_path: ""
albert_network: 'albert_base'

#export
export_ckpt_file: "/data/users/user2/projects/waxProject/albert/output/classifier_finetune/ckpt/CoLA/classifier-800_66.ckpt"
export_file_name: "./output/export/cla"
file_format: "MINDIR"


optimizer_cfg:
    optimizer: 'AdamWeightDecay'
    AdamWeightDecay:
        learning_rate: 0.00003  # 3e-5
        end_learning_rate: 0.0000000000  # 0
        power: 1.0
        weight_decay: 0.01
        decay_filter: ['layernorm', 'bias']
        eps: 0.000001  # 1e-6
    Lamb:
        learning_rate: 0.00002  # 2e-5,
        end_learning_rate: 0.0000000001  # 1e-10
        power: 1.0
        weight_decay: 0.01
        decay_filter: ['layernorm', 'bias']

albert_base:
    seq_length: 256
    vocab_size: 30000
    hidden_size: 768
    embedding_size: 128
    num_hidden_groups: 1
    num_hidden_layers: 12
    num_attention_heads: 12
    intermediate_size: 3072
    hidden_act: "gelu"
    hidden_dropout_prob: 0.0
    inner_group_num: 1
    attention_probs_dropout_prob: 0.0
    max_position_embeddings: 512
    type_vocab_size: 2
    initializer_range: 0.02
    use_relative_positions: True
    dtype: mstype.float32
    compute_type: mstype.float16

albert_large:
    seq_length: 384
    vocab_size: 30000
    hidden_size: 1024
    embedding_size: 128
    num_hidden_groups: 1
    num_hidden_layers: 24
    num_attention_heads: 16
    intermediate_size: 4096
    hidden_act: "gelu"
    hidden_dropout_prob: 0.1
    inner_group_num: 1
    attention_probs_dropout_prob: 0.1
    max_position_embeddings: 512
    type_vocab_size: 2
    initializer_range: 0.02
    use_relative_positions: True
    dtype: mstype.float32
    compute_type: mstype.float16

albert_xlarge:
    seq_length: 384
    vocab_size: 30000
    hidden_size: 2048
    embedding_size: 128
    num_hidden_groups: 1
    num_hidden_layers: 24
    num_attention_heads: 32
    intermediate_size: 8192
    hidden_act: "gelu"
    hidden_dropout_prob: 0
    inner_group_num: 1
    attention_probs_dropout_prob: 0
    max_position_embeddings: 512
    type_vocab_size: 2
    initializer_range: 0.02
    use_relative_positions: True
    dtype: mstype.float32
    compute_type: mstype.float16

albert_xxlarge:
    seq_length: 384
    vocab_size: 30000
    hidden_size: 4096
    embedding_size: 128
    num_hidden_groups: 1
    num_hidden_layers: 12
    num_attention_heads: 64
    intermediate_size: 16384
    hidden_act: "gelu"
    hidden_dropout_prob: 0
    inner_group_num: 1
    attention_probs_dropout_prob: 0
    max_position_embeddings: 512
    type_vocab_size: 2
    initializer_range: 0.02
    use_relative_positions: True
    dtype: mstype.float32
    compute_type: mstype.float16


---
# Help description for each configuration
output_path: "The location of the output file."
device_target: "Running platform, choose from Ascend or CPU, and default is Ascend."
enable_profiling: 'Whether enable profiling while training, default: False'

do_train: "Enable train, default is false"
do_eval: "Enable eval, default is false"
device_id: "Device id, default is 0."
epoch_num: "Epoch number, default is 3."
num_class: "The number of class, default is 2."
train_data_shuffle: "Enable train data shuffle, default is true"
eval_data_shuffle: "Enable eval data shuffle, default is false"
train_batch_size: "Train batch size, default is 32"
eval_batch_size: "Eval batch size, default is 1"
save_finetune_checkpoint_path: "Save checkpoint path"
load_pretrain_checkpoint_path: "Load checkpoint file path"
load_finetune_checkpoint_path: "Load checkpoint file path"
train_data_file_path: "Data path, it is better to use absolute path"
eval_data_file_path: "Data path, it is better to use absolute path"
schema_file_path: "Schema path, it is better to use absolute path"

---
# chocies
device_target: ['Ascend', 'GPU']
do_train: [True, False]
do_eval: [True, False]
train_data_shuffle: [True, False]
eval_data_shuffle: [True, False]
optimizer: ['AdamWeightDecay','Lamb']
albert_network: ["albert_base","albert_large","albert_xlarge","albert_xxlarge"]
